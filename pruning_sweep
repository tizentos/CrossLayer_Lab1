#!/bin/bash
#----------------------------------------------------
# Sample Slurm job script
#   for TACC Stampede2 KNL nodes
#
#   *** Serial Job on Normal Queue ***
# 
# Last revised: 20 Oct 2017
#
# Notes:
#
#   -- Copy/edit this script as desired.  Launch by executing
#      "sbatch knl.serial.slurm" on a Stampede2 login node.
#
#   -- Serial codes run on a single node (upper case N = 1).
#        A serial code ignores the value of lower case n,
#        but slurm needs a plausible value to schedule the job.
#
#   -- For a good way to run multiple serial executables at the
#        same time, execute "module load launcher" followed
#        by "module help launcher".

#----------------------------------------------------

#SBATCH -J cnn           # Job name
#SBATCH -o cnn.o%j       # Name of stdout output file
#SBATCH -e cnn.e%j       # Name of stderr error file
#SBATCH -p gtx          # Queue (partition) name
#SBATCH -N 1               # Total # of nodes (must be 1 for serial)
#SBATCH -n 1               # Total # of mpi tasks (should be 1 for serial)
#SBATCH -t 01:00:00        # Run time (hh:mm:ss)
#SBATCH --mail-user=naiqiao1995@gmail.com
#SBATCH --mail-type=all    # Send email at begin and end of job
#SBATCH -A Cross-Layer-ML-HW       # Allocation name (req'd if you have more than 1)

# Other commands must follow all #SBATCH directives...

module load python3
mkdir -p /home1/07150/ny2639/lab1/CrossLayer_Lab1/output
 

# Launch serial code...
#python /home1/07150/ny2639/lab1/CrossLayer_Lab1/saveModel.py > /home1/07150/ny2639/lab1/CrossLayer_Lab1/output/pruning
export CUDA_VISIBLE_DEVICES=0
python /home1/07150/ny2639/lab1/CrossLayer_Lab1/pruning.py --thr 0.01 --enable_thr_pruning 1  > /home1/07150/ny2639/lab1/CrossLayer_Lab1/output/thr01

export CUDA_VISIBLE_DEVICES=1
python /home1/07150/ny2639/lab1/CrossLayer_Lab1/pruning.py --thr 0.02 --enable_thr_pruning 1 > /home1/07150/ny2639/lab1/CrossLayer_Lab1/output/thr02

export CUDA_VISIBLE_DEVICES=2
python /home1/07150/ny2639/lab1/CrossLayer_Lab1/pruning.py --thr 0.03 --enable_thr_pruning 1 > /home1/07150/ny2639/lab1/CrossLayer_Lab1/output/thr03

export CUDA_VISIBLE_DEVICES=3
python /home1/07150/ny2639/lab1/CrossLayer_Lab1/pruning.py --thr 0.05 --enable_thr_pruning 1 > /home1/07150/ny2639/lab1/CrossLayer_Lab1/output/thr05

wait


export CUDA_VISIBLE_DEVICES=0
python /home1/07150/ny2639/lab1/CrossLayer_Lab1/pruning.py --thr 0.08 --enable_thr_pruning 1  > /home1/07150/ny2639/lab1/CrossLayer_Lab1/output/thr08

export CUDA_VISIBLE_DEVICES=1
python /home1/07150/ny2639/lab1/CrossLayer_Lab1/pruning.py --thr 0.1 --enable_thr_pruning 1 > /home1/07150/ny2639/lab1/CrossLayer_Lab1/output/thr10 

export CUDA_VISIBLE_DEVICES=2
python /home1/07150/ny2639/lab1/CrossLayer_Lab1/pruning.py --thr 0.11 --enable_thr_pruning 1 > /home1/07150/ny2639/lab1/CrossLayer_Lab1/output/thr11

export CUDA_VISIBLE_DEVICES=3
python /home1/07150/ny2639/lab1/CrossLayer_Lab1/pruning.py --thr 0.13 --enable_thr_pruning 1 > /home1/07150/ny2639/lab1/CrossLayer_Lab1/output/thr13

wait

export CUDA_VISIBLE_DEVICES=0
python /home1/07150/ny2639/lab1/CrossLayer_Lab1/pruning.py --thr 0.15 --enable_thr_pruning 1  > /home1/07150/ny2639/lab1/CrossLayer_Lab1/output/thr15 

export CUDA_VISIBLE_DEVICES=1
python /home1/07150/ny2639/lab1/CrossLayer_Lab1/pruning.py --thr 0.2 --enable_thr_pruning 1 > /home1/07150/ny2639/lab1/CrossLayer_Lab1/output/thr20

export CUDA_VISIBLE_DEVICES=2
python /home1/07150/ny2639/lab1/CrossLayer_Lab1/pruning.py --frac 3 --enable_thr_pruning 0 > /home1/07150/ny2639/lab1/CrossLayer_Lab1/output/frac3

export CUDA_VISIBLE_DEVICES=3
python /home1/07150/ny2639/lab1/CrossLayer_Lab1/pruning.py --frac 5 --enable_thr_pruning 0 > /home1/07150/ny2639/lab1/CrossLayer_Lab1/output/frac5

wait

export CUDA_VISIBLE_DEVICES=0
python /home1/07150/ny2639/lab1/CrossLayer_Lab1/pruning.py --frac 7 --enable_thr_pruning 0  > /home1/07150/ny2639/lab1/CrossLayer_Lab1/output/frac7

export CUDA_VISIBLE_DEVICES=1
python /home1/07150/ny2639/lab1/CrossLayer_Lab1/pruning.py --frac 9 --enable_thr_pruning 0 > /home1/07150/ny2639/lab1/CrossLayer_Lab1/output/frac9

export CUDA_VISIBLE_DEVICES=2
python /home1/07150/ny2639/lab1/CrossLayer_Lab1/pruning.py --frac 10 --enable_thr_pruning 0 > /home1/07150/ny2639/lab1/CrossLayer_Lab1/output/frac10

export CUDA_VISIBLE_DEVICES=3
python /home1/07150/ny2639/lab1/CrossLayer_Lab1/pruning.py --frac 60 --enable_thr_pruning 0 > /home1/07150/ny2639/lab1/CrossLayer_Lab1/output/frac60

wait
export CUDA_VISIBLE_DEVICES=0
python /home1/07150/ny2639/lab1/CrossLayer_Lab1/pruning.py --frac 1 --enable_thr_pruning 0  > /home1/07150/ny2639/lab1/CrossLayer_Lab1/output/frac1

export CUDA_VISIBLE_DEVICES=1
python /home1/07150/ny2639/lab1/CrossLayer_Lab1/pruning.py --frac 0.8 --enable_thr_pruning 0 > /home1/07150/ny2639/lab1/CrossLayer_Lab1/output/frac08

export CUDA_VISIBLE_DEVICES=2
python /home1/07150/ny2639/lab1/CrossLayer_Lab1/pruning.py --frac 0.5 --enable_thr_pruning 0 > /home1/07150/ny2639/lab1/CrossLayer_Lab1/output/frac05

export CUDA_VISIBLE_DEVICES=3
python /home1/07150/ny2639/lab1/CrossLayer_Lab1/pruning.py --frac 0.1 --enable_thr_pruning 0 > /home1/07150/ny2639/lab1/CrossLayer_Lab1/output/frac01

wait
# ---------------------------------------------------
